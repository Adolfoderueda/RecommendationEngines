critics = read.csv("C:/Users/adolf/OneDrive/Documents/IE Business School/2nd Semester/Recommendation Engines/IE-Lab1/Data/critics.csv", sep = ",")
View(critics)
View(critics)
critics = read.csv("C:/Users/adolf/OneDrive/Documents/IE Business School/2nd Semester/Recommendation Engines/Labs/IE-Lab1/Data")
critics = read.csv("C:/Users/adolf/OneDrive/Documents/IE Business School/2nd Semester/Recommendation Engines/Labs/IE-Lab1/Data/critics.csv")
critics = read.csv("C:/Users/adolf/OneDrive/Documents/IE Business School/2nd Semester/Recommendation Engines/Labs/IE-Lab1/Data/critics.csv", sep = ",", fill = FALSE)
View(critics)
critics = read.csv("C:/Users/adolf/OneDrive/Documents/IE Business School/2nd Semester/Recommendation Engines/Labs/IE-Lab1/Data/critics.csv", sep = ",", na.strings = "")
View(critics)
View(critics)
critics = read.csv("C:/Users/adolf/OneDrive/Documents/IE Business School/2nd Semester/Recommendation Engines/Labs/IE-Lab1/Data/critics.csv", sep = ",", na.strings = " ")
View(critics)
is.na(critics)
count(is.na(critics))
mean(critics$Star.Wars.IV...A.New.Hope)
critics_nona = critics[,!=NA]
critics_nona = critics[!is.na(critics)]
print(ratings[x])
print(ratings(x))
for(x in length(critics)){
ratings = mean(na.omit(critics[x,]))
print(ratings(x))
}
ratings = []
ratings = ()
for(x in 1:2){
y = mean(na.omit(critics[x,]))
print(y)
}
y = mean(na.pass(critics[x,]))
critics(x,y) = NULL
for(x,y in 1:ncol(critics), 1:nrow(critics)){
for(x in 1:ncol(critics)){
ratings = data.frame(mean(critics[x,], na.rm = TRUE))
}
View(ratings)
critics = read.csv("C:/Users/adolf/OneDrive/Documents/IE Business School/2nd Semester/Recommendation Engines/Labs/IE-Lab1/Data/critics.csv", sep = ",")
mean(critics[1,], na.rm = TRUE)
mean(critics[1,], na.rm = TRUE)
mean(critics[1,], na.rm = FALSE)
mean(critics[,1], na.rm = TRUE)
ratings = mean(critics$Star.Wars.IV...A.New.Hope, na.rm = TRUE)
print(ratings)
ratings[2,x-1] = colnames(critics[x,])
for(x in 2:ncol(critics)){
if(x == 2){
ratings[1,1] = data.frame(mean(critics[x,], na.rm = TRUE))
ratings[2,1] = colnames(critics[x,])
}
if(x>2){
ratings[1,x-1] = data.frame(mean(critics[x,], na.rm = TRUE))
ratings[2,x-1] = colnames(critics[x,])
}
}
ratings = []
ratings = []
liked_most = matrix(NA, ncol = 2, nrow = 20)
ratio = matrix(NA, ncol = 2)
new_data = subset(critics, is.na(critics[[21]])==FALSE)
new_data
new_data = subset(critics, is.na(critics[[2]])>=4)
new_data
new_data = critics[critics[,21]>=4,]
new_data
new_data = new_data[complete.cases(new_data)]
new_data
new_data = new_data[complete.cases(new_data[,21]),]
new_data = critics[critics[,21]>=4,]
new_data
new_data = new_data[complete.cases(new_data[,21]),]
new_data
liked_most = matrix(NA, ncol = 2, nrow = 20)
ratio = matrix(NA, ncol = 2)
new_data = critics[critics[,21]>=4,]
new_data = new_data[complete.cases(new_data[,21]),]
#new_data = subset(critics, is.na(critics[[2]])>=4)
for(i in 2:ncol(critics)-1){
x = i-1
ratio = cbind(mean(new_data[,i], na.rm = TRUE), colnames(new_data[i]))
liked_most[x,] = ratio
}
head(liked_most[order(liked_most[,1], decreasing = TRUE),], n = 5)
# library(data.table)
library(reshape)
library(tidyr)
critics = read.csv("C:/Users/adolf/OneDrive/Documents/IE Business School/2nd Semester/Recommendation Engines/Labs/Data/critics.csv", sep = ",")
#get the mean of each column into a matrix
means_col = matrix(colMeans(critics[-1], na.rm = TRUE))
#get the names of each column
film_col = matrix(colnames(critics[-1]))
#bind them into the same matrix
ratings = cbind(means_col,film_col)
#print top 5
head(ratings[order(ratings[,1], decreasing = TRUE),], n = 5)
#create two matrixes empty for the next for loop
percentages = matrix(NA, ncol = 2, nrow = 20)
value = matrix(NA, ncol = 2)
#for loop to bind into a matrix two columns: first one sum the number of ratings >= 4 and divide them by the total and the name of the movie where you are carrying this operation
for(i in 2:ncol(critics)){
x = i-1
value = cbind(c(sum(critics[[i]]>=4, na.rm = TRUE)/sum(critics[[i]]>0, na.rm = TRUE)),c( colnames(critics[i])))
percentages[x,] = value
}
#print top 5
head(percentages[order(percentages[,1], decreasing = TRUE),], n = 5)
#create two matrixes empty for the next for loop
nratings = matrix(NA, ncol = 2, nrow = 20)
value = matrix(NA, ncol = 2)
#for loop to bind into a matrix two columns: first one sum the total number of ratings and the name of the movie where you are carrying this operation
for(i in 2:ncol(critics)){
x = i-1
value = cbind(sum(critics[[i]]>=0, na.rm = TRUE),c(colnames(critics[i])))
nratings[x,] = value
}
#In this case we need to make it data frame to modify the number of ratings column to make it number type data and the plot the top 5
nratings = data.frame(nratings)
nratings$X1 = as.numeric(as.character(nratings$X1))
str(nratings)
head(nratings[order(nratings[,1], decreasing = TRUE),], n = 5)
#create two matrixes empty for the next for loop
preferences = matrix(NA, ncol = 2, nrow = 20)
ratio = matrix(NA, ncol = 2)
#for loop to bind into a matrix two columns: first one sum the number of ratings that "Star Wars IV: A New Hope" and the other movies coincided and the name of the movie where you are carrying this operation
for(i in 3:nrow(critics)){
x = i-1
ratio = cbind(sum((is.na(critics[[i]])==FALSE) & (is.na(critics[[2]])==FALSE), na.rm = TRUE)/sum(((is.na(critics[[2]])==FALSE))), c(colnames(critics[i])))
preferences[x,] = ratio
}
#print top 5
head(preferences[order(preferences[,1], decreasing = TRUE),], n = 5)
#create two matrixes empty for the next for loop and a new dataset with only the rows where "Babe" ratings are 4 or higher
liked_most = matrix(NA, ncol = 2, nrow = 20)
ratio = matrix(NA, ncol = 2)
new_data = critics[critics[,21]>=4,]
new_data = new_data[complete.cases(new_data[,21]),]
# in this for loop we create a two column matrix: first column with the average rate for each movie and the second with the name of the movie
for(i in 2:ncol(critics)-1){
x = i-1
ratio = cbind(mean(new_data[,i], na.rm = TRUE), colnames(new_data[i]))
liked_most[x,] = ratio
}
# print the top 5
head(liked_most[order(liked_most[,1], decreasing = TRUE),], n = 5)
# Loading the data
movies_100k = read.csv("C:/Users/adolf/OneDrive/Documents/IE Business School/2nd Semester/Recommendation Engines/Labs/Data/ml-latest-small/movies.csv", sep = ",")
ratings_100k = read.csv("C:/Users/adolf/OneDrive/Documents/IE Business School/2nd Semester/Recommendation Engines/Labs/Data/ml-latest-small/ratings.csv", sep = ",")
# Putting both databases together
data_100k = merge(ratings_100k, movies_100k, by.x = 'movieId')
#Erasing columns we dont need due to merge
data_100k$movieId = NULL
data_100k$genres = NULL
data_100k$timestamp = NULL
# We use spread function to give our data the same structure as in past exercises
data_100k = data_100k[-86634,]#repeated rating --> user rates the movie twice
data_100k = spread(data = data_100k, key = title, value = rating)
head(data_100k)
# Same as Exercise 1
means_col_100 = matrix(colMeans(data_100k[-1], na.rm = TRUE))
film_col_100 = matrix(colnames(data_100k[-1]))
ratings_100 = cbind(means_col_100,film_col_100)
head(ratings_100[order(ratings_100[,1], decreasing = TRUE),], n = 5)
# Same as exercise 2
percentages = matrix(NA, ncol = 2, nrow = ncol(data_100k))
value = matrix(NA, ncol = 2)
for(i in 2:ncol(data_100k)){
x = i-1
value = cbind(c(sum(data_100k[,i]>=4, na.rm = TRUE)/sum(data_100k[,i]>0, na.rm = TRUE)),c( colnames(data_100k[i])))
percentages[x,] = value
}
head(percentages[order(percentages[,1], decreasing = TRUE),], n = 5)
# Same as exercise 3
nratings = matrix(NA, ncol = 2, nrow = ncol(data_100k))
value = matrix(NA, ncol = 2)
for(i in 2:ncol(data_100k)){
x = i-1
value = cbind(sum(data_100k[[i]]>=0, na.rm = TRUE),c(colnames(data_100k[i])))
nratings[x,] = value
}
nratings = data.frame(nratings)
nratings$X1 = as.numeric(as.character(nratings$X1))
nratings = as.matrix(nratings)
head(nratings[order(nratings[,1], decreasing = TRUE),], n = 5)
#Same as in exercise 4
preferences = matrix(NA, ncol = 2, nrow = nrow(data_100k))
ratio = matrix(NA, ncol = 2)
for(i in 3:nrow(data_100k)){
x = i-1
ratio = cbind(sum((is.na(data_100k[[i]])==FALSE) & (is.na(data_100k[[2]])==FALSE), na.rm = TRUE)/sum(((is.na(data_100k[[2]])==FALSE))), c(colnames(data_100k[i])))
preferences[x,] = ratio
}
head(preferences[order(preferences[,1], decreasing = TRUE),], n = 5)
#Same as in exercise 5
liked_most = matrix(NA, ncol = 2, nrow = ncol(data_100k))
ratio = matrix(NA, ncol = 2)
new_data = data_100k[data_100k$`Forrest Gump (1994)`>=4,]
new_data = new_data[complete.cases(new_data$`Forrest Gump (1994)`),]
#new_data = subset(data_100k, is.na(data_100k[[ncol(data_100k)]])==FALSE)
for(i in 2:ncol(data_100k)){
x = i-1
ratio = cbind(mean(new_data[,i], na.rm = TRUE), colnames(new_data[i]))
liked_most[x,] = ratio
}
liked_most = liked_most[liked_most[,1]!="NaN",]
head(liked_most[order(liked_most[,1], decreasing = TRUE),], n = 5)
proc.time() -ptm
